Executed at 2024-08-01_07-35-14
logging to ./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_log.txt
seed=57
bg_noise=0.1
train_mix_mnist_model=True
save_mix_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
original_train_epochs=4
train_bw_mnist_model=True
save_bw_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
original_train_epochs=4
train_bg_only_colour_mnist_model=True
save_bg_only_colour_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
original_train_epochs=4
train_bg_unbiased_colour_mnist_model=True
save_bg_unbiased_colour_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
original_train_epochs=4
train_biased_colour_mnist_model=True
save_biased_colour_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
original_train_epochs=4
train_unbiased_colour_mnist_model=True
save_unbiased_colour_mnist_model_as='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
original_train_epochs=4
stitch_train_epochs=10
================================================
Train ResNet18 on mix
Epoch 0, loss 293.21
Epoch 1, loss 34.20
Epoch 2, loss 22.68
Epoch 3, loss 16.58
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
Train ResNet18 on bw
Epoch 0, loss 141.66
Epoch 1, loss 34.35
Epoch 2, loss 19.98
Epoch 3, loss 15.17
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
Train ResNet18 on bgonly
Epoch 0, loss 61.96
Epoch 1, loss 5.75
Epoch 2, loss 6.21
Epoch 3, loss 3.59
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
Train ResNet18 on bg
Epoch 0, loss 62.47
Epoch 1, loss 6.67
Epoch 2, loss 6.78
Epoch 3, loss 1.53
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
Train ResNet18 on bias
Epoch 0, loss 108.11
Epoch 1, loss 6.44
Epoch 2, loss 3.16
Epoch 3, loss 1.85
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
Train ResNet18 on unbias
Epoch 0, loss 391.30
Epoch 1, loss 61.83
Epoch 2, loss 42.71
Epoch 3, loss 34.41
**** Finished Training ****
saveas='./results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
Entering Confusion
Accuracy Calculation for ResNet18 with key='mix'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bw'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 67.45 %
Confusion Matrix
tensor([[ 962,    1,    0,    0,    0,    0,    4,    1,   12,    0],
        [   0, 1119,    5,    0,    4,    0,    2,    0,    5,    0],
        [   3,    4,  971,    0,    6,    0,    0,    4,   44,    0],
        [  15,   29,    6,    0,  324,    0,    1,    1,  634,    0],
        [   0,   86,    0,    0,  896,    0,    0,    0,    0,    0],
        [   9,   68,    0,    0,  620,    0,   32,    0,  163,    0],
        [   0,   13,    0,    0,   15,    0,  923,    0,    7,    0],
        [   0,  219,    1,    0,  260,    0,    0,  511,   30,    7],
        [   2,   45,    0,    0,   58,    0,    0,    0,  869,    0],
        [   0,   20,    0,    0,  467,    0,    0,    0,   28,  494]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bgonly'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 61.87 %
Confusion Matrix
tensor([[   7,    0,    0,    0,    0,    0,  973,    0,    0,    0],
        [   0, 1134,    0,    0,    0,    1,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,  612,    0,    0,  346,    0,    0,    0],
        [   0,    0,    0,    0,  981,    0,    0,   47,    0,    0],
        [   0,    0,  580,    0,    0,    0,    0,    0,  394,    0],
        [   0,    0,    0,  666,    0,    0,    0,    0,    0,  343]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bg'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='unbias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 97.92 %
Confusion Matrix
tensor([[ 976,    1,    1,    0,    0,    0,    1,    1,    0,    0],
        [   0, 1128,    1,    1,    0,    0,    3,    0,    2,    0],
        [   5,    0, 1023,    0,    1,    0,    0,    3,    0,    0],
        [   0,    0,    3,  995,    0,    6,    0,    2,    4,    0],
        [   0,    0,    0,    0,  971,    0,    2,    1,    2,    6],
        [   1,    0,    0,    9,    0,  869,    2,    2,    6,    3],
        [   8,    4,    0,    0,    2,    1,  937,    0,    6,    0],
        [   1,    7,    8,    2,    0,    0,    0, 1008,    1,    1],
        [   5,    0,   14,    4,    8,    1,    0,    2,  935,    5],
        [   7,    7,    2,    5,   26,    2,    0,    9,    1,  950]],
       dtype=torch.int32)
tensor(10000)
original_accuracy={'mix': 100.0, 'bw': 67.45, 'bgonly': 61.87, 'bg': 100.0, 'bias': 100.0, 'unbias': 97.92}
Entering whole model check
Measure Rank for key='mix'
Entering whole model check
Measure Rank for key='mix'
Measure Rank for key='bw'
Measure Rank for key='bgonly'
Measure Rank for key='bg'
Measure Rank for key='bias'
Measure Rank for key='unbias'
Entering Stitch/Rank
device='cuda:3'
NOTE: Only running stitch with unbias receive model
NOTE: Only running stitch with unbias receive model
NOTE: Only running stitch with unbias receive model
NOTE: Only running stitch with unbias receive model
NOTE: Only running stitch with unbias receive model
Evaluate ranks and output to ./results_4_epochs_rank/mix3unbias-bias-57_2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist-test.csv
Train the stitch to a model stitched after layer 3 from mix to unbias
Use the biased data loader (train and test) regardless of what unbias was trained on
Epoch 0, loss 264.19
Epoch 1, loss 42.66
Epoch 2, loss 27.51
Epoch 3, loss 21.45
Epoch 4, loss 18.34
Epoch 5, loss 15.16
Epoch 6, loss 14.14
Epoch 7, loss 12.25
Epoch 8, loss 11.06
Epoch 9, loss 9.72
**** Finished Training ****
Test the trained stitch against biased data
Test Accuracy: 99.63 %
Confusion Matrix
tensor([[ 974,    0,    1,    0,    1,    0,    3,    1,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    2, 1008,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  981,    0,    1,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    2,    0,    0,    0,    1,  953,    0,    2,    0],
        [   1,    0,    1,    0,    4,    0,    0, 1021,    1,    0],
        [   0,    0,    0,    0,    3,    3,    0,    0,  968,    0],
        [   1,    3,    0,    4,    2,    0,    0,    0,    0,  999]],
       dtype=torch.int32)
===================================================================
Evaluate ranks and output to ./results_4_epochs_rank/mix4unbias-bias-57_2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist-test.csv
Train the stitch to a model stitched after layer 4 from mix to unbias
Use the biased data loader (train and test) regardless of what unbias was trained on
