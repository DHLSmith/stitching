Executed at 2024-08-07_08-09-06
logging to ./results_4a/2024-08-07_08-09-06_SEED64_EPOCHS4_BGN0.1_exp4a_ResNet18_log.txt
seed=64
bg_noise=0.1
dynamic_unbias=False
train_mix_mnist_model=False
mix_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
train_bw_mnist_model=False
bw_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
train_bg_only_colour_mnist_model=False
bg_only_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
train_bg_unbiased_colour_mnist_model=False
bg_unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
train_biased_colour_mnist_model=False
biased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
train_unbiased_colour_mnist_model=False
unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
stitch_train_epochs=10
================================================
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
Entering Confusion
Accuracy Calculation for ResNet18 with key='mix'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 99.97 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    3,    0,    0,    0, 1006]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bw'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 67.40 %
Confusion Matrix
tensor([[ 962,    1,    0,    0,    0,    0,    4,    1,   12,    0],
        [   0, 1120,    5,    0,    4,    0,    2,    0,    4,    0],
        [   3,    3,  976,    0,    7,    0,    0,    4,   39,    0],
        [  13,   28,    3,    0,  343,    0,    1,    1,  621,    0],
        [   0,   86,    0,    0,  896,    0,    0,    0,    0,    0],
        [  11,   69,    0,    0,  615,    0,   36,    0,  161,    0],
        [   0,   13,    0,    0,   16,    0,  922,    0,    7,    0],
        [   0,  219,    1,    0,  265,    0,    0,  508,   30,    5],
        [   2,   51,    0,    0,   42,    0,    0,    0,  879,    0],
        [   2,   23,    0,    0,  481,    0,    0,    0,   26,  477]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bgonly'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 64.41 %
Confusion Matrix
tensor([[ 279,    0,    0,    0,    0,    0,  701,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,  338,    0,    0,    0,    0,    0,  694,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,  570,    0,    0,  388,    0,    0,    0],
        [   0,    0,    0,    0,  898,    0,    0,  130,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,   30,    0,    0,    0,    0,  666,  313]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bg'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='unbias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 97.80 %
Confusion Matrix
tensor([[ 972,    0,    0,    0,    0,    1,    5,    1,    1,    0],
        [   1, 1105,    0,    0,    0,    0,   10,    0,   19,    0],
        [   3,    0, 1017,    1,    1,    0,    2,    0,    8,    0],
        [   0,    0,    2,  995,    0,    4,    0,    1,    7,    1],
        [   0,    0,    1,    0,  953,    0,   11,    1,    4,   12],
        [   1,    0,    0,    9,    1,  861,    8,    0,   11,    1],
        [   3,    2,    0,    0,    0,    2,  942,    0,    9,    0],
        [   0,    1,   20,    3,    0,    0,    0, 1003,    0,    1],
        [   5,    0,    2,    0,    1,    2,    1,    1,  959,    3],
        [   2,    3,    0,    6,   12,    1,    0,    7,    5,  973]],
       dtype=torch.int32)
tensor(10000)
original_accuracy={'mix': 99.97, 'bw': 67.4, 'bgonly': 64.41, 'bg': 100.0, 'bias': 100.0, 'unbias': 97.8}
Entering whole model check
Measure Rank for key='mix'
Measure Rank for key='bw'
Measure Rank for key='bgonly'
Measure Rank for key='bg'
Measure Rank for key='bias'
Measure Rank for key='unbias'
Entering Stitch/Rank
device='cuda:1'
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
Evaluate ranks and output to ./results_4a_rank/unbias3mix-bias-64_2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist-test.csv
Train the stitch to a model stitched after layer 3 from unbias to mix
Use the biased data loader (train and test) regardless of what mix was trained on
Epoch 0, loss 226.85
Epoch 1, loss 17.38
Epoch 2, loss 11.65
Epoch 3, loss 7.35
Epoch 4, loss 6.77
Epoch 5, loss 5.54
Epoch 6, loss 4.41
Epoch 7, loss 4.06
Epoch 8, loss 3.92
Epoch 9, loss 3.52
**** Finished Training ****
Change in stitch weights: 0.9350165128707886
Largest abs weight change: 0.10085510462522507
Number of weights changing > 0.1 of that: 1773 out of 64 weights
Change in stitch bias: 0.026682564988732338
Largest abs bias change: 0.005632832646369934
Number of bias changing > 0.1 of that: 54 out of 64 weights
Test the trained stitch against biased data
Test Accuracy: 99.93 %
Confusion Matrix
tensor([[ 978,    0,    0,    0,    0,    0,    0,    2,    0,    0],
        [   1, 1133,    0,    0,    0,    0,    1,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    2,    0,    0,    0,  956,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    1,    0,    0,    0,  973,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
===================================================================
Evaluate ranks and output to ./results_4a_rank/unbias4mix-bias-64_2024-08-02_11-10-38_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist-test.csv
Train the stitch to a model stitched after layer 4 from unbias to mix
Use the biased data loader (train and test) regardless of what mix was trained on
