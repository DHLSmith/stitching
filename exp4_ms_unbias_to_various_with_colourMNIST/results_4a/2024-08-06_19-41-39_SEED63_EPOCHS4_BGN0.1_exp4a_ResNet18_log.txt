Executed at 2024-08-06_19-41-39
logging to ./results_4a/2024-08-06_19-41-39_SEED63_EPOCHS4_BGN0.1_exp4a_ResNet18_log.txt
seed=63
bg_noise=0.1
dynamic_unbias=False
train_mix_mnist_model=False
mix_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
train_bw_mnist_model=False
bw_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
train_bg_only_colour_mnist_model=False
bg_only_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
train_bg_unbiased_colour_mnist_model=False
bg_unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
train_biased_colour_mnist_model=False
biased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
train_unbiased_colour_mnist_model=False
unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
stitch_train_epochs=10
================================================
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bw_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_only_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_bg_unbiased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_biased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results_4_epochs/2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_unbiased_colour_mnist.weights'
Entering Confusion
Accuracy Calculation for ResNet18 with key='mix'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bw'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 67.36 %
Confusion Matrix
tensor([[ 959,    2,    0,    0,    0,    0,    5,    1,   13,    0],
        [   0, 1120,    5,    0,    4,    0,    2,    0,    4,    0],
        [   3,    3,  974,    0,    8,    0,    0,    4,   40,    0],
        [  15,   30,    2,    0,  322,    0,    1,    1,  639,    0],
        [   0,   87,    0,    0,  895,    0,    0,    0,    0,    0],
        [   8,   77,    0,    0,  620,    0,   32,    0,  155,    0],
        [   1,   16,    0,    0,   18,    0,  918,    0,    5,    0],
        [   0,  207,    2,    0,  261,    0,    0,  530,   23,    5],
        [   2,   42,    0,    0,   51,    0,    0,    0,  879,    0],
        [   1,   27,    0,    0,  495,    0,    0,    0,   25,  461]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bgonly'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 61.46 %
Confusion Matrix
tensor([[   5,    0,    0,    0,    0,    0,  975,    0,    0,    0],
        [   0, 1134,    0,    0,    0,    1,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,  602,    0,    0,  356,    0,    0,    0],
        [   0,    0,    0,    0,  979,    0,    0,   49,    0,    0],
        [   0,    0,  604,    0,    0,    0,    0,    0,  370,    0],
        [   0,    0,    0,  693,    0,    0,    0,    0,    0,  316]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bg'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='unbias'
Test the Trained Resnet18 against BIASED TEST DATALOADER
Test Accuracy: 97.89 %
Confusion Matrix
tensor([[ 976,    1,    1,    0,    0,    0,    1,    1,    0,    0],
        [   0, 1126,    1,    1,    2,    0,    3,    0,    2,    0],
        [   5,    0, 1022,    0,    2,    0,    1,    2,    0,    0],
        [   0,    0,    3,  995,    0,    6,    0,    2,    4,    0],
        [   0,    0,    0,    0,  971,    0,    2,    1,    2,    6],
        [   1,    0,    0,    9,    0,  869,    2,    2,    6,    3],
        [   8,    4,    0,    0,    1,    1,  938,    0,    6,    0],
        [   1,    7,    7,    2,    0,    0,    0, 1009,    1,    1],
        [   4,    1,   14,    4,    8,    2,    1,    3,  932,    5],
        [   7,    7,    2,    5,   26,    2,    0,    8,    1,  951]],
       dtype=torch.int32)
tensor(10000)
original_accuracy={'mix': 100.0, 'bw': 67.36, 'bgonly': 61.46, 'bg': 100.0, 'bias': 100.0, 'unbias': 97.89}
Entering whole model check
Measure Rank for key='mix'
Measure Rank for key='bw'
Measure Rank for key='bgonly'
Measure Rank for key='bg'
Measure Rank for key='bias'
Measure Rank for key='unbias'
Entering Stitch/Rank
device='cuda:0'
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
Evaluate ranks and output to ./results_4a_rank/unbias3mix-bias-63_2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist-test.csv
Train the stitch to a model stitched after layer 3 from unbias to mix
Use the biased data loader (train and test) regardless of what mix was trained on
Entering Stitch/Rank
device='cuda:0'
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
NOTE: Only running stitch with unbias SEND model
Evaluate ranks and output to ./results_4a_rank/unbias3mix-bias-63_2024-08-01_07-35-14_SEED57_EPOCHS4_BGN0.1_exp2d_ResNet18_mix_mnist-test.csv
Train the stitch to a model stitched after layer 3 from unbias to mix
Use the biased data loader (train and test) regardless of what mix was trained on
