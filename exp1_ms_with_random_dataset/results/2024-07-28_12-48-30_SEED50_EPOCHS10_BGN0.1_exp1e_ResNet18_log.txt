Executed at 2024-07-28_12-48-30
logging to ./results/2024-07-28_12-48-30_SEED50_EPOCHS10_BGN0.1_exp1e_ResNet18_log.txt
seed=50
bg_noise=0.1
synthetic_dataset_noise=0.1
train_mix_mnist_model=False
mix_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_mix_mnist.weights'
train_bw_mnist_model=False
bw_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bw_mnist.weights'
train_bg_only_colour_mnist_model=False
bg_only_colour_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bg_only_colour_mnist.weights'
train_bg_unbiased_colour_mnist_model=False
bg_unbiased_colour_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bg_unbiased_colour_mnist.weights'
train_biased_colour_mnist_model=False
biased_colour_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_biased_colour_mnist.weights'
train_unbiased_colour_mnist_model=False
unbiased_colour_mnist_model_to_load='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_unbiased_colour_mnist.weights'
train_stitch=True
stitch_train_epochs=5
================================================
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_mix_mnist.weights'
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bw_mnist.weights'
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bg_only_colour_mnist.weights'
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_bg_unbiased_colour_mnist.weights'
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_biased_colour_mnist.weights'
val['loadfrom']='./results/2024-07-28_09-14-39_SEED48_EPOCHS10_BGN0.1_exp1e_ResNet18_unbiased_colour_mnist.weights'
Accuracy Calculation for ResNet18 with key='mix'
Test the Trained Resnet18
Test Accuracy: 99.37 %
Confusion Matrix
tensor([[ 979,    0,    0,    0,    0,    0,    2,    0,    0,    0],
        [   0, 1123,    0,    0,    1,    0,    1,    0,    0,    0],
        [   2,    4, 1039,    0,    0,    0,    0,    1,    1,    0],
        [   2,    0,    1, 1020,    0,    1,    0,    1,    2,    0],
        [   0,    0,    1,    0,  966,    0,    2,    0,    1,    4],
        [   2,    0,    0,    0,    0,  882,    2,    0,    0,    1],
        [   1,    0,    0,    0,    0,    0,  992,    0,    0,    0],
        [   1,    1,    3,    2,    0,    0,    0,  983,    0,    6],
        [   5,    0,    3,    0,    0,    0,    0,    1,  954,    2],
        [   2,    0,    0,    0,    2,    2,    0,    0,    0,  999]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bw'
Test the Trained Resnet18
Test Accuracy: 99.12 %
Confusion Matrix
tensor([[ 974,    0,    1,    0,    0,    0,    4,    1,    0,    0],
        [   0, 1133,    0,    0,    1,    0,    0,    1,    0,    0],
        [   1,    1, 1023,    0,    0,    0,    1,    4,    2,    0],
        [   0,    0,    1, 1001,    0,    6,    0,    0,    2,    0],
        [   0,    0,    0,    0,  977,    0,    2,    0,    0,    3],
        [   1,    0,    0,    2,    0,  885,    3,    0,    1,    0],
        [   2,    2,    0,    0,    0,    2,  951,    0,    1,    0],
        [   0,    2,    1,    1,    1,    0,    0, 1022,    1,    0],
        [   0,    0,    1,    0,    0,    2,    0,    1,  970,    0],
        [   0,    0,    0,    2,    3,    9,    0,    5,   14,  976]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bgonly'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bg'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1004,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1002,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,  991,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1004,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1002,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1003,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  996,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1003,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  992,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1003]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bias'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='unbias'
Test the Trained Resnet18
Test Accuracy: 98.56 %
Confusion Matrix
tensor([[ 976,    0,    0,    0,    0,    1,    2,    1,    0,    0],
        [   1, 1128,    2,    0,    0,    0,    4,    0,    0,    0],
        [   3,    0, 1021,    3,    1,    0,    0,    3,    1,    0],
        [   0,    0,    2, 1001,    0,    3,    0,    2,    2,    0],
        [   0,    1,    2,    0,  964,    0,    2,    2,    2,    9],
        [   1,    0,    0,   11,    0,  877,    1,    1,    1,    0],
        [   2,    2,    0,    0,    1,    7,  943,    0,    3,    0],
        [   0,    4,    1,    0,    0,    0,    0, 1021,    1,    1],
        [   1,    3,    0,    6,    1,    7,    0,    4,  949,    3],
        [   1,    4,    0,    4,    8,    4,    0,    9,    3,  976]],
       dtype=torch.int32)
tensor(10000)
original_accuracy={'mix': 99.37, 'bw': 99.12, 'bgonly': 100.0, 'bg': 100.0, 'bias': 100.0, 'unbias': 98.56}
Measure Rank for key='mix'
Measure Rank for key='bw'
Measure Rank for key='bgonly'
Skipping the bg dataset as I don't know how to make the dataloader work yet
Measure Rank for key='bias'
Measure Rank for key='unbias'
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 1480.52
Epoch 1, loss 7.78
Epoch 2, loss 6.46
Epoch 3, loss 7.82
Epoch 4, loss 3.42
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 1286.42
Epoch 1, loss 395.61
Epoch 2, loss 217.76
Epoch 3, loss 161.03
Epoch 4, loss 130.39
**** Finished Training ****
Test the trained stitch
Test Accuracy: 95.74 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   1,    1,    1,    0,    0,    0,  997,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,  422,    0,    0,    0,    0,    0,  578,    0],
        [   0,    0,    1,    0,    0,    0,    0,    0,    0,  999]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 159.63
Epoch 1, loss 7.72
Epoch 2, loss 1.90
Epoch 3, loss 1.57
Epoch 4, loss 3.04
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 115.75
Epoch 1, loss 4.02
Epoch 2, loss 0.94
Epoch 3, loss 1.89
Epoch 4, loss 0.44
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 34.75
Epoch 1, loss 0.23
Epoch 2, loss 0.18
Epoch 3, loss 0.15
Epoch 4, loss 0.13
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 38.33
Epoch 1, loss 0.25
Epoch 2, loss 0.19
Epoch 3, loss 0.17
Epoch 4, loss 0.14
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 375.81
Epoch 1, loss 5.46
Epoch 2, loss 3.17
Epoch 3, loss 1.60
Epoch 4, loss 1.91
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.99 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,  999,    0,    0,    0,    1,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 326.91
Epoch 1, loss 3.51
Epoch 2, loss 2.90
Epoch 3, loss 2.03
Epoch 4, loss 1.00
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 92.93
Epoch 1, loss 1.47
Epoch 2, loss 1.30
Epoch 3, loss 0.84
Epoch 4, loss 0.67
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 93.47
Epoch 1, loss 1.89
Epoch 2, loss 1.00
Epoch 3, loss 1.22
Epoch 4, loss 0.49
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 38.87
Epoch 1, loss 0.57
Epoch 2, loss 0.41
Epoch 3, loss 0.31
Epoch 4, loss 0.27
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 35.62
Epoch 1, loss 0.65
Epoch 2, loss 0.43
Epoch 3, loss 0.34
Epoch 4, loss 0.29
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 406.13
Epoch 1, loss 15.48
Epoch 2, loss 15.93
Epoch 3, loss 10.30
Epoch 4, loss 14.03
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 4018.07
Epoch 1, loss 11.86
Epoch 2, loss 3.96
Epoch 3, loss 11.39
Epoch 4, loss 2.42
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 462.76
Epoch 1, loss 2.75
Epoch 2, loss 8.26
Epoch 3, loss 1.82
Epoch 4, loss 3.85
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 241.19
Epoch 1, loss 1.33
Epoch 2, loss 0.94
Epoch 3, loss 0.90
Epoch 4, loss 1.76
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 50.03
Epoch 1, loss 0.60
Epoch 2, loss 0.43
Epoch 3, loss 0.34
Epoch 4, loss 0.29
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 36.92
Epoch 1, loss 0.61
Epoch 2, loss 0.42
Epoch 3, loss 0.33
Epoch 4, loss 0.27
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 742.87
Epoch 1, loss 3.83
Epoch 2, loss 3.89
Epoch 3, loss 3.52
Epoch 4, loss 2.43
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 199.39
Epoch 1, loss 4.01
Epoch 2, loss 2.67
Epoch 3, loss 3.30
Epoch 4, loss 3.19
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 239.09
Epoch 1, loss 3.40
Epoch 2, loss 2.40
Epoch 3, loss 1.63
Epoch 4, loss 3.14
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 89.26
Epoch 1, loss 1.19
Epoch 2, loss 0.81
Epoch 3, loss 0.65
Epoch 4, loss 0.57
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 34.22
Epoch 1, loss 0.79
Epoch 2, loss 0.53
Epoch 3, loss 0.41
Epoch 4, loss 0.35
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 41.88
Epoch 1, loss 0.76
Epoch 2, loss 0.53
Epoch 3, loss 0.41
Epoch 4, loss 0.36
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 2547.92
Epoch 1, loss 10.56
Epoch 2, loss 16.15
Epoch 3, loss 26.92
Epoch 4, loss 23.31
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.99 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    1,    0,    0,    0,  999,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 150.84
Epoch 1, loss 9.29
Epoch 2, loss 15.78
Epoch 3, loss 22.98
Epoch 4, loss 13.62
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 1626.16
Epoch 1, loss 2.98
Epoch 2, loss 10.48
Epoch 3, loss 18.32
Epoch 4, loss 14.93
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 205.29
Epoch 1, loss 1.46
Epoch 2, loss 1.02
Epoch 3, loss 4.17
Epoch 4, loss 7.78
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 47.73
Epoch 1, loss 0.50
Epoch 2, loss 0.36
Epoch 3, loss 0.28
Epoch 4, loss 0.24
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 31.75
Epoch 1, loss 0.58
Epoch 2, loss 0.41
Epoch 3, loss 0.31
Epoch 4, loss 0.26
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 111.48
Epoch 1, loss 4.03
Epoch 2, loss 3.73
Epoch 3, loss 2.21
Epoch 4, loss 1.54
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 255.30
Epoch 1, loss 3.01
Epoch 2, loss 2.00
Epoch 3, loss 1.60
Epoch 4, loss 1.17
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.99 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,  999,    0,    0,    0,    0,    1,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 151.43
Epoch 1, loss 4.18
Epoch 2, loss 1.87
Epoch 3, loss 1.25
Epoch 4, loss 1.01
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 62.79
Epoch 1, loss 2.72
Epoch 2, loss 1.70
Epoch 3, loss 1.32
Epoch 4, loss 1.04
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 24.36
Epoch 1, loss 0.70
Epoch 2, loss 0.47
Epoch 3, loss 0.35
Epoch 4, loss 0.30
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 34.20
Epoch 1, loss 0.56
Epoch 2, loss 0.39
Epoch 3, loss 0.33
Epoch 4, loss 0.27
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
stitching_accuracies={'mix': {3: 100.0, 4: 95.74, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bw': {3: 99.99, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bgonly': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bg': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bias': {3: 99.99, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'unbias': {3: 100.0, 4: 99.99, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}}
stitching_penalties={'mix': {3: -0.6299999999999955, 4: 3.6300000000000097, 5: -0.6299999999999955, 6: -0.6299999999999955, 7: -0.6299999999999955, 8: -0.6299999999999955}, 'bw': {3: -0.8699999999999903, 4: -0.8799999999999955, 5: -0.8799999999999955, 6: -0.8799999999999955, 7: -0.8799999999999955, 8: -0.8799999999999955}, 'bgonly': {3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'bg': {3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'bias': {3: 0.010000000000005116, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'unbias': {3: -1.4399999999999977, 4: -1.4299999999999926, 5: -1.4399999999999977, 6: -1.4399999999999977, 7: -1.4399999999999977, 8: -1.4399999999999977}}
synth-mix
99.37
Stitch Accuracy
100.0
95.74
100.0
100.0
100.0
100.0
--------------------------
synth-bw
99.12
Stitch Accuracy
99.99
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bgonly
100.0
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bg
100.0
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bias
100.0
Stitch Accuracy
99.99
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-unbias
98.56
Stitch Accuracy
100.0
99.99
100.0
100.0
100.0
100.0
--------------------------
