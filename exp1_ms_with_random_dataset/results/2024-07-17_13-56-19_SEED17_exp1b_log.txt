Executed at 2024-07-17_13-56-19
seed=17
train_mnist_model=False, model_to_load='./results/2024-07-11_15-34-33_resnet18_mnist.weights'
original_train_epochs=10, stitch_train_epochs=10
synthetic_dataset_noise=0.1
================================================
Test the Trained Resnet18
Test Accuracy: 99.12 %
Confusion Matrix
tensor([[ 971,    0,    1,    1,    0,    4,    2,    0,    1,    0],
        [   0, 1130,    0,    2,    0,    0,    1,    0,    1,    1],
        [   2,    0, 1025,    1,    0,    0,    1,    3,    0,    0],
        [   0,    0,    1, 1007,    0,    1,    0,    0,    1,    0],
        [   0,    0,    0,    0,  978,    0,    0,    0,    0,    4],
        [   0,    0,    0,    4,    0,  886,    1,    0,    1,    0],
        [   1,    2,    0,    0,    3,    4,  944,    0,    4,    0],
        [   0,    4,    3,    1,    0,    1,    0, 1015,    1,    3],
        [   0,    0,    1,    1,    1,    1,    0,    0,  970,    0],
        [   0,    0,    0,    2,    5,   12,    0,    1,    3,  986]],
       dtype=torch.int32)
tensor(10000)
after layer 3, activations shape is torch.Size([10, 3136])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 27.81
Epoch 1, loss 0.18
Epoch 2, loss 0.13
Epoch 3, loss 0.10
Epoch 4, loss 0.09
Epoch 5, loss 0.08
Epoch 6, loss 0.07
Epoch 7, loss 0.06
Epoch 8, loss 0.06
Epoch 9, loss 0.05
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 3136])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 18.17
Epoch 1, loss 0.17
Epoch 2, loss 0.14
Epoch 3, loss 0.10
Epoch 4, loss 0.08
Epoch 5, loss 0.07
Epoch 6, loss 0.06
Epoch 7, loss 0.06
Epoch 8, loss 0.05
Epoch 9, loss 0.05
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 2048])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 13.11
Epoch 1, loss 0.27
Epoch 2, loss 0.20
Epoch 3, loss 0.16
Epoch 4, loss 0.14
Epoch 5, loss 0.12
Epoch 6, loss 0.11
Epoch 7, loss 0.10
Epoch 8, loss 0.09
Epoch 9, loss 0.08
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 1024])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 26.75
Epoch 1, loss 0.69
Epoch 2, loss 0.49
Epoch 3, loss 0.38
Epoch 4, loss 0.32
Epoch 5, loss 0.28
Epoch 6, loss 0.24
Epoch 7, loss 0.22
Epoch 8, loss 0.20
Epoch 9, loss 0.18
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 437.14
Epoch 1, loss 53.50
Epoch 2, loss 29.81
Epoch 3, loss 21.09
Epoch 4, loss 16.55
Epoch 5, loss 13.77
Epoch 6, loss 11.91
Epoch 7, loss 10.57
Epoch 8, loss 9.57
Epoch 9, loss 8.79
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 418.50
Epoch 1, loss 53.75
Epoch 2, loss 30.03
Epoch 3, loss 21.26
Epoch 4, loss 16.68
Epoch 5, loss 13.89
Epoch 6, loss 12.00
Epoch 7, loss 10.66
Epoch 8, loss 9.65
Epoch 9, loss 8.86
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
