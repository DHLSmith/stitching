Executed at 2024-07-28_01-27-19
logging to ./results/2024-07-28_01-27-19_SEED46_EPOCHS10_BGN0.1_exp1d_ResNet18_log.txt
seed=46
bg_noise=0.1
synthetic_dataset_noise=0.1
train_mix_mnist_model=False
mix_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-24_17-53-22_SEED43_EPOCHS10_BGN0.1_exp2c_ResNet18_mix_mnist.weights'
train_bw_mnist_model=False
bw_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-19_14-49-04_SEED21_EPOCHS10_exp2a_ResNet18_bw_mnist.weights'
train_bg_only_colour_mnist_model=False
bg_only_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_bg_only_colour_mnist.weights'
train_bg_unbiased_colour_mnist_model=False
bg_unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_bg_unbiased_colour_mnist.weights'
train_biased_colour_mnist_model=False
biased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_biased_colour_mnist.weights'
train_unbiased_colour_mnist_model=False
unbiased_colour_mnist_model_to_load='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_unbiased_colour_mnist.weights'
train_stitch=True
stitch_train_epochs=5
================================================
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-24_17-53-22_SEED43_EPOCHS10_BGN0.1_exp2c_ResNet18_mix_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-19_14-49-04_SEED21_EPOCHS10_exp2a_ResNet18_bw_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_bg_only_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_bg_unbiased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_biased_colour_mnist.weights'
val['loadfrom']='../exp2_ms_with_colorMNIST/results/2024-07-22_17-24-48_SEED41_EPOCHS10_BGN0.1_exp2b_ResNet18_unbiased_colour_mnist.weights'
Accuracy Calculation for ResNet18 with key='mix'
Test the Trained Resnet18
Test Accuracy: 99.42 %
Confusion Matrix
tensor([[ 999,    0,    0,    0,    0,    0,    0,    1,    2,    0],
        [   0, 1099,    2,    1,    1,    0,    0,    0,    1,    1],
        [   0,    0, 1006,    0,    0,    0,    0,    0,    4,    0],
        [   0,    0,    1, 1033,    0,    5,    0,    0,    5,    3],
        [   0,    0,    0,    0,  945,    0,    1,    0,    0,    1],
        [   0,    0,    0,    1,    0,  882,    2,    0,    1,    0],
        [   2,    0,    0,    0,    1,    2,  947,    0,    2,    0],
        [   0,    0,    2,    0,    1,    0,    0, 1056,    0,    2],
        [   0,    0,    0,    0,    1,    0,    0,    0,  972,    1],
        [   0,    0,    1,    0,    7,    0,    0,    0,    3, 1003]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bw'
Test the Trained Resnet18
Test Accuracy: 99.06 %
Confusion Matrix
tensor([[ 966,    0,    1,    0,    0,    0,    8,    0,    4,    1],
        [   0, 1131,    0,    0,    0,    0,    3,    1,    0,    0],
        [   1,    3, 1012,    4,    1,    0,    1,    4,    6,    0],
        [   0,    0,    0, 1007,    0,    1,    0,    0,    2,    0],
        [   0,    0,    0,    0,  973,    0,    4,    0,    0,    5],
        [   1,    0,    0,   10,    0,  880,    1,    0,    0,    0],
        [   0,    2,    0,    0,    0,    2,  953,    0,    1,    0],
        [   0,    2,    3,    2,    0,    0,    0, 1015,    3,    3],
        [   0,    0,    1,    1,    0,    1,    0,    1,  970,    0],
        [   0,    1,    0,    2,    3,    1,    0,    0,    3,  999]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bgonly'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bg'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1003,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,  991,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1003,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,  997,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1003,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  996,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1003,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1003,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  999,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1002]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='bias'
Test the Trained Resnet18
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[ 980,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1135,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1032,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1010,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,  982,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,  892,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,  958,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1028,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  974,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1009]],
       dtype=torch.int32)
tensor(10000)
Accuracy Calculation for ResNet18 with key='unbias'
Test the Trained Resnet18
Test Accuracy: 98.19 %
Confusion Matrix
tensor([[ 975,    0,    0,    0,    0,    1,    2,    1,    1,    0],
        [   0, 1129,    2,    2,    1,    0,    1,    0,    0,    0],
        [   5,    1, 1019,    3,    1,    0,    0,    2,    1,    0],
        [   1,    1,    3,  988,    0,    7,    0,    1,    5,    4],
        [   0,    0,    2,    0,  968,    0,    1,    2,    2,    7],
        [   3,    0,    0,    5,    0,  873,    5,    0,    2,    4],
        [   3,    3,    0,    0,    2,    2,  946,    0,    2,    0],
        [   1,    6,    5,    1,    0,    0,    1, 1007,    1,    6],
        [   5,    4,    2,    2,    4,    2,    3,    1,  950,    1],
        [   4,    6,    2,    3,   14,    4,    0,    4,    8,  964]],
       dtype=torch.int32)
tensor(10000)
original_accuracy={'mix': 99.42, 'bw': 99.06, 'bgonly': 100.0, 'bg': 100.0, 'bias': 100.0, 'unbias': 98.19}
Measure Rank for key='mix'
Measure Rank for key='bw'
Measure Rank for key='bgonly'
Skipping the bg dataset as I don't know how to make the dataloader work yet
Measure Rank for key='bias'
Measure Rank for key='unbias'
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 950.41
Epoch 1, loss 227.84
Epoch 2, loss 129.49
Epoch 3, loss 98.29
Epoch 4, loss 81.06
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.09 %
Confusion Matrix
tensor([[ 956,    0,   43,    0,    0,    0,    1,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,   47,    0,    0,    0,    0,    0,  953,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 563.52
Epoch 1, loss 3.78
Epoch 2, loss 2.84
Epoch 3, loss 2.46
Epoch 4, loss 2.15
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.99 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    1,    0,    0,    0,    0,    0,  999,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 101.09
Epoch 1, loss 1.60
Epoch 2, loss 1.04
Epoch 3, loss 0.90
Epoch 4, loss 0.75
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 149.45
Epoch 1, loss 1.53
Epoch 2, loss 1.03
Epoch 3, loss 0.83
Epoch 4, loss 0.72
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 60.94
Epoch 1, loss 0.28
Epoch 2, loss 0.21
Epoch 3, loss 0.17
Epoch 4, loss 0.14
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 47.02
Epoch 1, loss 0.27
Epoch 2, loss 0.22
Epoch 3, loss 0.18
Epoch 4, loss 0.17
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 310.35
Epoch 1, loss 6.64
Epoch 2, loss 1.58
Epoch 3, loss 1.30
Epoch 4, loss 2.85
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 165.53
Epoch 1, loss 5.11
Epoch 2, loss 6.75
Epoch 3, loss 1.24
Epoch 4, loss 0.90
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 161.31
Epoch 1, loss 2.70
Epoch 2, loss 2.09
Epoch 3, loss 1.52
Epoch 4, loss 1.83
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 45.05
Epoch 1, loss 8.57
Epoch 2, loss 1.17
Epoch 3, loss 3.49
Epoch 4, loss 0.71
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 34.60
Epoch 1, loss 0.79
Epoch 2, loss 0.53
Epoch 3, loss 0.40
Epoch 4, loss 0.34
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 40.65
Epoch 1, loss 0.80
Epoch 2, loss 0.53
Epoch 3, loss 0.43
Epoch 4, loss 0.35
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 1035.81
Epoch 1, loss 33.41
Epoch 2, loss 76.34
Epoch 3, loss 34.98
Epoch 4, loss 2.79
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 435.30
Epoch 1, loss 6.80
Epoch 2, loss 4.20
Epoch 3, loss 88.82
Epoch 4, loss 70.63
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 1054.66
Epoch 1, loss 33.71
Epoch 2, loss 27.38
Epoch 3, loss 1.47
Epoch 4, loss 58.55
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 400.46
Epoch 1, loss 44.89
Epoch 2, loss 19.74
Epoch 3, loss 20.65
Epoch 4, loss 0.96
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 31.40
Epoch 1, loss 0.40
Epoch 2, loss 0.29
Epoch 3, loss 0.23
Epoch 4, loss 0.18
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 38.31
Epoch 1, loss 0.36
Epoch 2, loss 0.25
Epoch 3, loss 0.19
Epoch 4, loss 0.17
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 638.92
Epoch 1, loss 6.49
Epoch 2, loss 4.17
Epoch 3, loss 10.64
Epoch 4, loss 11.88
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 693.29
Epoch 1, loss 5.74
Epoch 2, loss 3.80
Epoch 3, loss 3.07
Epoch 4, loss 2.96
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 222.79
Epoch 1, loss 6.57
Epoch 2, loss 5.37
Epoch 3, loss 2.52
Epoch 4, loss 3.60
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 57.83
Epoch 1, loss 3.21
Epoch 2, loss 0.99
Epoch 3, loss 1.99
Epoch 4, loss 0.68
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 33.45
Epoch 1, loss 0.50
Epoch 2, loss 0.34
Epoch 3, loss 0.27
Epoch 4, loss 0.23
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 42.22
Epoch 1, loss 0.49
Epoch 2, loss 0.34
Epoch 3, loss 0.27
Epoch 4, loss 0.23
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 1983.01
Epoch 1, loss 65.78
Epoch 2, loss 38.48
Epoch 3, loss 15.04
Epoch 4, loss 31.64
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 365.40
Epoch 1, loss 42.62
Epoch 2, loss 54.44
Epoch 3, loss 19.33
Epoch 4, loss 20.90
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 517.10
Epoch 1, loss 18.12
Epoch 2, loss 4.60
Epoch 3, loss 43.46
Epoch 4, loss 4.59
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 196.89
Epoch 1, loss 1.56
Epoch 2, loss 4.47
Epoch 3, loss 2.82
Epoch 4, loss 2.24
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 37.81
Epoch 1, loss 0.44
Epoch 2, loss 0.31
Epoch 3, loss 0.24
Epoch 4, loss 0.20
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 30.36
Epoch 1, loss 0.48
Epoch 2, loss 0.32
Epoch 3, loss 0.25
Epoch 4, loss 0.21
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 3, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 3
Epoch 0, loss 191.80
Epoch 1, loss 7.12
Epoch 2, loss 4.11
Epoch 3, loss 3.18
Epoch 4, loss 2.23
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 4, activations shape is torch.Size([10, 64, 7, 7])
Train the stitch to a top model cut after layer 4
Epoch 0, loss 441.76
Epoch 1, loss 28.89
Epoch 2, loss 16.40
Epoch 3, loss 11.51
Epoch 4, loss 8.88
**** Finished Training ****
Test the trained stitch
Test Accuracy: 99.67 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,   12,    0,    0,  988,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,   21,    0,    0,    0,    0,    0,  979,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 5, activations shape is torch.Size([10, 128, 4, 4])
Train the stitch to a top model cut after layer 5
Epoch 0, loss 92.18
Epoch 1, loss 1.31
Epoch 2, loss 0.87
Epoch 3, loss 0.74
Epoch 4, loss 0.60
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 6, activations shape is torch.Size([10, 256, 2, 2])
Train the stitch to a top model cut after layer 6
Epoch 0, loss 74.21
Epoch 1, loss 2.00
Epoch 2, loss 1.18
Epoch 3, loss 0.90
Epoch 4, loss 0.76
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 7, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 7
Epoch 0, loss 40.84
Epoch 1, loss 0.45
Epoch 2, loss 0.35
Epoch 3, loss 0.28
Epoch 4, loss 0.25
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
after layer 8, activations shape is torch.Size([10, 512, 1, 1])
Train the stitch to a top model cut after layer 8
Epoch 0, loss 28.63
Epoch 1, loss 0.50
Epoch 2, loss 0.37
Epoch 3, loss 0.29
Epoch 4, loss 0.24
**** Finished Training ****
Test the trained stitch
Test Accuracy: 100.00 %
Confusion Matrix
tensor([[1000,    0,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0, 1000,    0,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0, 1000,    0,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0, 1000,    0,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0, 1000,    0,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0, 1000,    0,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0, 1000,    0,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0, 1000,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0, 1000,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,    0, 1000]],
       dtype=torch.int32)
===================================================================
stitching_accuracies={'mix': {3: 99.09, 4: 99.99, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bw': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bgonly': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bg': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'bias': {3: 100.0, 4: 100.0, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}, 'unbias': {3: 100.0, 4: 99.67, 5: 100.0, 6: 100.0, 7: 100.0, 8: 100.0}}
stitching_penalties={'mix': {3: 0.3299999999999983, 4: -0.5699999999999932, 5: -0.5799999999999983, 6: -0.5799999999999983, 7: -0.5799999999999983, 8: -0.5799999999999983}, 'bw': {3: -0.9399999999999977, 4: -0.9399999999999977, 5: -0.9399999999999977, 6: -0.9399999999999977, 7: -0.9399999999999977, 8: -0.9399999999999977}, 'bgonly': {3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'bg': {3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'bias': {3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0}, 'unbias': {3: -1.8100000000000023, 4: -1.480000000000004, 5: -1.8100000000000023, 6: -1.8100000000000023, 7: -1.8100000000000023, 8: -1.8100000000000023}}
synth-mix
99.42
Stitch Accuracy
99.09
99.99
100.0
100.0
100.0
100.0
--------------------------
synth-bw
99.06
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bgonly
100.0
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bg
100.0
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-bias
100.0
Stitch Accuracy
100.0
100.0
100.0
100.0
100.0
100.0
--------------------------
synth-unbias
98.19
Stitch Accuracy
100.0
99.67
100.0
100.0
100.0
100.0
--------------------------
